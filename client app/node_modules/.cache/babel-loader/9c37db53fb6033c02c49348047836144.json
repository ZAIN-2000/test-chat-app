{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abria\\\\Desktop\\\\WSB\\\\test-chat-app\\\\client app\\\\src\\\\components\\\\Chats.js\";\nimport React, { useRef, useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport { useHistory } from \"react-router-dom\";\nimport { ChatEngine } from 'react-chat-engine';\nimport { useAuth } from \"../contexts/AuthContext\";\nimport { auth } from \"../firebase\";\nexport default function Chats() {\n  const didMountRef = useRef(false);\n  const [loading, setLoading] = useState(true);\n  const {\n    user\n  } = useAuth();\n  const history = useHistory();\n\n  async function handleLogout() {\n    await auth.signOut();\n    history.push(\"/\");\n  }\n\n  async function getFile(url) {\n    let response = await fetch(url);\n    let data = await response.blob();\n    return new File([data], \"test.jpg\", {\n      type: 'image/jpeg'\n    });\n  }\n\n  useEffect(() => {\n    if (!didMountRef.current) {\n      didMountRef.current = true;\n\n      if (!user || user === null) {\n        history.push(\"/\");\n        return;\n      } // Get-or-Create should be in a Firebase Function\n\n\n      axios.get('https://api.chatengine.io/users/me/', {\n        headers: {\n          \"project-id\": process.env.REACT_APP_CHAT_ENGINE_ID,\n          \"user-name\": user.email,\n          \"user-secret\": user.uid\n        }\n      }).then(() => setLoading(false)).catch(e => {\n        let formdata = new FormData();\n        formdata.append('email', user.email);\n        formdata.append('username', user.email);\n        formdata.append('secret', user.uid);\n        getFile(user.photoURL).then(avatar => {\n          formdata.append('avatar', avatar, avatar.name);\n          axios.post('https://api.chatengine.io/users/', formdata, {\n            headers: {\n              \"private-key\": process.env.REACT_APP_CHAT_ENGINE_KEY\n            }\n          }).then(() => setLoading(false)).catch(e => console.log('e', e.response));\n        });\n      }); // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    }\n  }, [user, history]);\n  if (!user || loading) return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 32\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chats-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"nav-bar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"logo-tab\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, \"Unichat\"), /*#__PURE__*/React.createElement(\"div\", {\n    onClick: handleLogout,\n    className: \"logout-tab\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, \"Logout\")), /*#__PURE__*/React.createElement(ChatEngine, {\n    height: \"calc(100vh - 66px)\",\n    projectID: process.env.REACT_APP_CHAT_ENGINE_ID,\n    userName: user.email,\n    userSecret: user.uid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/abria/Desktop/WSB/test-chat-app/client app/src/components/Chats.js"],"names":["React","useRef","useState","useEffect","axios","useHistory","ChatEngine","useAuth","auth","Chats","didMountRef","loading","setLoading","user","history","handleLogout","signOut","push","getFile","url","response","fetch","data","blob","File","type","current","get","headers","process","env","REACT_APP_CHAT_ENGINE_ID","email","uid","then","catch","e","formdata","FormData","append","photoURL","avatar","name","post","REACT_APP_CHAT_ENGINE_KEY","console","log"],"mappings":"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","sourcesContent":["import React, { useRef, useState, useEffect } from \"react\"\r\n\r\nimport axios from 'axios'\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { ChatEngine } from 'react-chat-engine'\r\n\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\n\r\nimport { auth } from \"../firebase\"\r\n\r\nexport default function Chats() {\r\n  const didMountRef = useRef(false)\r\n  const [ loading, setLoading ] = useState(true)\r\n  const { user } = useAuth()\r\n  const history = useHistory()\r\n\r\n  async function handleLogout() {\r\n    await auth.signOut()\r\n    history.push(\"/\")\r\n  }\r\n\r\n  async function getFile(url) {\r\n    let response = await fetch(url);\r\n    let data = await response.blob();\r\n    return new File([data], \"test.jpg\", { type: 'image/jpeg' });\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!didMountRef.current) {\r\n      didMountRef.current = true\r\n\r\n      if (!user || user === null) {\r\n        history.push(\"/\")\r\n        return\r\n      }\r\n      \r\n      // Get-or-Create should be in a Firebase Function\r\n      axios.get(\r\n        'https://api.chatengine.io/users/me/',\r\n        { headers: { \r\n          \"project-id\": process.env.REACT_APP_CHAT_ENGINE_ID,\r\n          \"user-name\": user.email,\r\n          \"user-secret\": user.uid\r\n        }}\r\n      )\r\n\r\n      .then(() => setLoading(false))\r\n\r\n      .catch(e => {\r\n        let formdata = new FormData()\r\n        formdata.append('email', user.email)\r\n        formdata.append('username', user.email)\r\n        formdata.append('secret', user.uid)\r\n\r\n        getFile(user.photoURL)\r\n        .then(avatar => {\r\n          formdata.append('avatar', avatar, avatar.name)\r\n\r\n          axios.post(\r\n            'https://api.chatengine.io/users/',\r\n            formdata,\r\n            { headers: { \"private-key\": process.env.REACT_APP_CHAT_ENGINE_KEY }}\r\n          )\r\n          .then(() => setLoading(false))\r\n          .catch(e => console.log('e', e.response))\r\n        })\r\n      })\r\n      // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\n    }\r\n  }, [user, history])\r\n  \r\n\r\n  if (!user || loading) return <div />\r\n\r\n  return (\r\n    <div className='chats-page'>\r\n      <div className='nav-bar'>\r\n        <div className='logo-tab'>\r\n          Unichat\r\n        </div>\r\n\r\n        <div onClick={handleLogout} className='logout-tab'>\r\n          Logout\r\n        </div>\r\n      </div>\r\n\r\n      <ChatEngine \r\n        height='calc(100vh - 66px)'\r\n        projectID= { process.env.REACT_APP_CHAT_ENGINE_ID}\r\n        userName={user.email}\r\n        userSecret={user.uid}\r\n      />\r\n    </div>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}